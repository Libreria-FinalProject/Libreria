<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bookMapper">
	<select id="selectFrameCate" resultType="BFC">
		select *
		from book_category_frame
	</select>
	
	<select id="getBookList" resultType="Book">
		<![CDATA[
		select *       
		 from(select *
				from bcp
				where bcf_no = #{bcf_no}
				order by b_pub_date desc)
        where rownum <= 10
		
		 ]]>
	</select>
	
	<select id="getBookPopList" resultType="Book">
		<![CDATA[
		 select *       
		 from(select *
				from bcp
				where bcf_no = #{bcf_no}
				order by b_cnt desc)
        where rownum <= 10
		 ]]>
	</select>
	
	
	<select id="getBookSubCateList" resultType="BSC">
		select * 
		from book_category
		where bcf_no = #{bcf_no}
	
	</select>
	
	
	<select id="getBookPopListsc"  resultType="Book">
		<![CDATA[
		select *       
		 from(select *
				from bcp
				where bc_no = #{bc_no}
				order by b_cnt desc)
        where rownum <= 10
		
		]]>
	</select>
	
	<select id="getBookListsc"  resultType="Book">
		<![CDATA[
		select *       
		 from(select *
				from bcp
				where bc_no = #{bc_no}
				order by b_pub_date desc)
        where rownum <= 10
		]]>
	</select>
	
	<select id="getBookDetail" resultType="Book">
		select * 
		from bdp
		where b_no = #{b_no} and b_delete = 'N'	
	</select>
	<select id="getReivewList" resultType="Review">
		select *
		from rlist 
		where b_no = #{b_no} 
	</select>
	
	<update id="updateReview">
		update review
		set rev_content = #{ rev_content }
		where rev_no = #{ rev_no }
	</update>
	<update id="reviewDelete">
		update review
		set rev_delete = 'Y'
		where rev_no = #{rev_no}
	</update>
	<insert id="reviewInsert">
		insert into review 
		values(SEQ_REV_NO.NEXTVAL,#{b_no},#{rev_star},#{rev_content},default,#{mem_no},sysdate)
	</insert>
	<select id="getReivewListSortLastest" resultType="Review">
		select *
		from rlist 
		where b_no = #{b_no} 
		order by rev_date desc
	
	</select>
	<select id="getReviewSortStarL" resultType="Review">
		select *
		from rlist 
		where b_no = #{b_no} 
		order by rev_star asc,rev_date asc
	
	</select>
	<select id="getReviewSortStarH" resultType="Review">
		select *
		from rlist 
		where b_no = #{b_no} 
		order by rev_star desc,rev_date asc
	
	</select>
	<select id="getListCount" resultType="_int">
		select count(*)
		from bcp
		where bcf_no = #{bcf_no}
	</select>
	
	<select id="getListCountC" resultType="_int">
		select count(*)
		from bcp
		where bc_no =#{bc_no}
		
	</select>
	<select id="selectBookList" resultType="Book">
		select *
		from bcp
		where bcf_no = #{bcf_no}
		order 
		<choose>
			<when test="std ==1">
				by b_cnt desc
			</when>
			<when test="std ==2">
				by b_pub_date desc
			</when>
			<when test="std ==3">
				by  avg_star desc
			</when>
			<when test="std ==4">
				by  avg_people desc
			</when>
			<otherwise>
				by avg_star desc
			</otherwise>
			
		</choose> 
		
	</select>
	<select id="selectBookListC" resultType="Book">
		select *
		from bcp
		where bc_no = #{bc_no}
		order 
		<choose>
			<when test="std ==1">
				by b_cnt desc
			</when>
			<when test="std ==2">
				by b_pub_date desc
			</when>
			<when test="std ==3">
				by  avg_star desc
			</when>
			<when test="std ==4">
				by  avg_people desc
			</when>
			<otherwise>
				by avg_star desc
			</otherwise>
			
		</choose> 
		
	</select>
	<select id="getBestListCount" resultType="_int">
		<!-- sortType - 1 이면 주간 // 2면 월간 //3이면 인기순   -->
		<!--  bc_no == 0일시 bcf_no기준으로 값 가져오기  -->
		
		<if test="std == 1">
			<choose>
				<when test="bc_no != 0">
					select count(b_no)
					from bcp_week
					where bc_no = #{bc_no}
				</when>
				<otherwise>
					select count(b_no)
					from bcp_week
					where bcf_no = #{bcf_no}
				</otherwise>
			</choose>
		</if>
		<if test="std == 2">
			<choose>
				<when test="bc_no != 0">
					select count(b_no)
					from bcp_month
					where bc_no = #{bc_no}
				</when>
				<otherwise>
					select count(b_no)
					from bcp_month
					where bcf_no = #{bcf_no}
				
				</otherwise>
			</choose>
		</if>
		
		
		<if test="std == 3">
			<choose>
				<when test="bc_no != 0">
					select count(b_no)
					from bcp
					where bc_no = #{bc_no}
				</when>
				<otherwise>
					select count(b_no)
					from bcp
					where bcf_no = #{bcf_no}
				</otherwise>
			</choose>
		</if>
	</select>
	
	<select id="getBookBestList" resultType="Book">
		<if test="std == 1">
			<choose>
				<when test="bc_no != 0">
					select * 
					from bcp_week
					where bc_no = #{bc_no}
				</when>
				<otherwise>
					select * 
					from bcp_week
					where bcf_no = #{bcf_no}
				</otherwise>
			</choose>
		</if>
		
		<if test="std == 2">
			<choose>
				<when test="bc_no != 0">
					select * 
					from bcp_month
					where bc_no = #{bc_no}
				</when>
				<otherwise>
					select * 
					from bcp_month
					where bcf_no = #{bcf_no}
				</otherwise>
			</choose>
		</if>
	
		<if test="std == 3">
			<choose>
				<when test="bc_no != 0">
					select * 
					from bcp
					where bc_no = #{bc_no}
					order by b_sales_rate desc
				</when>
				<otherwise>
					select * 
					from bcp
					where bcf_no = #{bcf_no}
					order by b_sales_rate desc
				</otherwise>
			</choose>
		</if>
	</select>
	
	<select id="getSearchlistCount" resultType="_int">
		<choose>
			<when test="std == 1">
				select count(*)
				from bdp
				where b_title like '%'||#{word}||'%'
			</when>
			<when test="std == 2">
				select count(*)
				from bdp
				where bwp_name like '%'||#{word}||'%'
			</when>
		</choose>
	
	
	</select>
	
	<select id="getSearchBookList" resultType="Book">
		
		<choose>
			<when test="std == 1">
				select *
				from bdp
				where b_title like '%'||#{word}||'%'
			</when>
			<when test="std == 2">
				select *
				from bdp
				where bwp_name like '%'||#{word}||'%'
			</when>
		</choose>
		
		
				
	
	
	</select>
	
	
	
	
	
	
	
	<!-- KH -->
	<select id="searchBookList" resultType="Book">
	<![CDATA[
		select * 
		from bdp
		where b_title like #{b_title}||'%'
		and rownum<=5
		]]>
	</select>
	
	<insert id="sellBook">
		insert into sell_data
		values(seq_sell_num.nextval, sysdate, null, #{sell_money}, #{mem_no},#{b_no})
	</insert>
	
	<select id="adminBuyBookList" resultType="SellData">
		select *
		from sell_data_joined
		where sell_decide_date is null
	</select>
	
	<select id="adminGetSellDataInfo" resultType="SellData">
		select *
		from sell_data_joined
		where sell_num=#{sell_num}
	</select>

	<update id="adminDecideSell">
		update sell_data
		set sell_decide_date = sysdate
		where sell_num = #{sell_num}
	</update>
	
	<update id="adminUpdateBookStock">
		update book
		set b_stock = b_stock+1
		where b_no = #{b_no}
	</update>
	
	<select id="adminGetBuyBookListCount" resultType="_int">
		select count(*)
		from sell_data_joined
		where sell_decide_date is null
	</select>
	
	<select id="getRecentBooks" resultType="Book">
		select * from 
		(select * from bdp 
		order by b_pub_date desc)
		where rownum between 1 and 15
	</select>
	
	<select id="getBestSellerBooks" resultType="Book">
		select * from (select b_no,count(b_no), bdp.b_title, bdp.bwp_name, bdp.avg_star, bdp.file_path, bdp.change_name
		from  buy_data
		join bdp using(b_no)
		group by b_no,b_title, bdp.bwp_name,  bdp.avg_star, bdp.file_path, bdp.change_name
		order by 2 desc) where rownum between 1 and 9
	</select>
	
	<select id="getRadnomNovelList" resultType="Book">
		select * from
		(select b_no, b_title,bwp_name, file_path, change_name, avg_star, bcf_ct 
		from bdp
		where bcf_ct = '소설' and avg_star > 3
		order by SYS.dbms_random.value) where rownum between 1 and 5
	</select>
	
	<select id="searchWriter" resultType="BookWriter">
		select * from 
		(select * 
		from book_writer_profile
		where bwp_name like #{bwp_name}||'%'
		order by bwp_name)
		where rownum between 1 and 5
	</select>

	<insert id="insertBook">
		insert into book
		values(seq_b_no.nextval, #{b_title}, #{b_content}, #{b_pub}, #{b_price}, 1, 
		sysdate, default, default, default, 'KOR', #{bc_no}, seq_img_no.currval, #{bwp_no}, default, #{b_pub_name})
	</insert>
	
	<insert id="insertBookImage">
		insert into image
		values(seq_img_no.nextval, #{origin_name}, #{change_name}, '/libreria/resources/images/book_cover', 0, default, 1)
	</insert>
	
	<!-- KH -->
	
</mapper>